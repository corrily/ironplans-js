/* tslint:disable */
/* eslint-disable */
/**
 * Iron Plans API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  UsageRecord,
  UsageRecordFromJSON,
  UsageRecordFromJSONTyped,
  UsageRecordToJSON,
} from './'

/**
 *
 * @export
 * @interface PaginatedUsageRecordList
 */
export interface PaginatedUsageRecordList {
  /**
   *
   * @type {number}
   * @memberof PaginatedUsageRecordList
   */
  count?: number
  /**
   *
   * @type {string}
   * @memberof PaginatedUsageRecordList
   */
  next?: string | null
  /**
   *
   * @type {string}
   * @memberof PaginatedUsageRecordList
   */
  previous?: string | null
  /**
   *
   * @type {Array<UsageRecord>}
   * @memberof PaginatedUsageRecordList
   */
  results?: Array<UsageRecord>
}

export function PaginatedUsageRecordListFromJSON(
  json: any
): PaginatedUsageRecordList {
  return PaginatedUsageRecordListFromJSONTyped(json, false)
}

export function PaginatedUsageRecordListFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PaginatedUsageRecordList {
  if (json === undefined || json === null) {
    return json
  }
  return {
    count: !exists(json, 'count') ? undefined : json['count'],
    next: !exists(json, 'next') ? undefined : json['next'],
    previous: !exists(json, 'previous') ? undefined : json['previous'],
    results: !exists(json, 'results')
      ? undefined
      : (json['results'] as Array<any>).map(UsageRecordFromJSON),
  }
}

export function PaginatedUsageRecordListToJSON(
  value?: PaginatedUsageRecordList | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    count: value.count,
    next: value.next,
    previous: value.previous,
    results:
      value.results === undefined
        ? undefined
        : (value.results as Array<any>).map(UsageRecordToJSON),
  }
}
