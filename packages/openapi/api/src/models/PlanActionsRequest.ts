/* tslint:disable */
/* eslint-disable */
/**
 * Iron Plans API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  CancelActionRequest,
  CancelActionRequestFromJSON,
  CancelActionRequestFromJSONTyped,
  CancelActionRequestToJSON,
  ContactActionRequest,
  ContactActionRequestFromJSON,
  ContactActionRequestFromJSONTyped,
  ContactActionRequestToJSON,
  SubscribeActionRequest,
  SubscribeActionRequestFromJSON,
  SubscribeActionRequestFromJSONTyped,
  SubscribeActionRequestToJSON,
  UndoCancelActionRequest,
  UndoCancelActionRequestFromJSON,
  UndoCancelActionRequestFromJSONTyped,
  UndoCancelActionRequestToJSON,
} from './'

/**
 * Serializer for plan actions.  Requires customer context.
 * @export
 * @interface PlanActionsRequest
 */
export interface PlanActionsRequest {
  /**
   *
   * @type {SubscribeActionRequest}
   * @memberof PlanActionsRequest
   */
  subscribe: SubscribeActionRequest
  /**
   *
   * @type {ContactActionRequest}
   * @memberof PlanActionsRequest
   */
  contact: ContactActionRequest
  /**
   *
   * @type {CancelActionRequest}
   * @memberof PlanActionsRequest
   */
  cancel: CancelActionRequest
  /**
   *
   * @type {UndoCancelActionRequest}
   * @memberof PlanActionsRequest
   */
  undoCancel: UndoCancelActionRequest
}

export function PlanActionsRequestFromJSON(json: any): PlanActionsRequest {
  return PlanActionsRequestFromJSONTyped(json, false)
}

export function PlanActionsRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PlanActionsRequest {
  if (json === undefined || json === null) {
    return json
  }
  return {
    subscribe: SubscribeActionRequestFromJSON(json['subscribe']),
    contact: ContactActionRequestFromJSON(json['contact']),
    cancel: CancelActionRequestFromJSON(json['cancel']),
    undoCancel: UndoCancelActionRequestFromJSON(json['undo_cancel']),
  }
}

export function PlanActionsRequestToJSON(
  value?: PlanActionsRequest | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    subscribe: SubscribeActionRequestToJSON(value.subscribe),
    contact: ContactActionRequestToJSON(value.contact),
    cancel: CancelActionRequestToJSON(value.cancel),
    undo_cancel: UndoCancelActionRequestToJSON(value.undoCancel),
  }
}
